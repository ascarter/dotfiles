emulate -L zsh

# Update zsh completion files for installed binaries

# Cue
_completions_cue() {
  if (( $+commands[cue] )); then
    cue completion zsh > ${completions_dir}/_cue
  fi
}

# GitHub
_completions_gh() {
  if (( $+commands[gh] )); then
    gh completion -s zsh > ${completions_dir}/_gh
  fi
}

# Glow
_completions_glow() {
  if (( $+commands[glow] )); then
    glow completion zsh > ${completions_dir}/_glow
  fi
}

# Kubernetes
_completions_kubectl() {
  if (( $+commands[kubectl] )); then
    kubectl completion zsh > ${completions_dir}/_kubectl
  fi
}

# Node.js
_completions_nodejs() {
  if (( $+commands[npm] )); then
    npm completion > ${completions_dir}/_npm
  fi
}

# 1Password
_completions_op() {
  if (( $+commands[op] )); then
    op completion zsh > ${completions_dir}/_op
  fi
}

# Pip 3
_completions_pip3() {
  if (( $+commands[pip3] )); then
    pip3 completion --zsh > ${completions_dir}/_pip3
    #compctl -K _pip_completion pip3
  fi
}

# Podman
_completions_podman() {
  echo "Checking for podman"
  if (( $+commands[podman] )); then
    podman completion -f ${completions_dir}/_podman zsh
  fi
}

# Rustup
_completions_rustup() {
  if (( $+commands[rustup] )); then
    rustup completions zsh > ${completions_dir}/_rustup
    rustup completions zsh cargo > ${completions_dir}/_cargo
  fi
}

# Volta
_completions_volta() {
  if (( $+commands[volta] )); then
    volta completions -o ${completions_dir}/_volta zsh
  fi
}

updatecompletions() {
  local completions_dir=${ZDOTDIR}/completions

  mkdir -p ${completions_dir}

  _completions_cue
  _completions_gh
  _completions_glow
  _completions_kubectl
  _completions_nodejs
  _completions_op
  _completions_pip3
  _completions_podman
  _completions_rustup
  _completions_volta

  echo "Updated zsh completions"
  echo "Reload session"
}

updatecompletions "$@"
