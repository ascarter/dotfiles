# developer zsh prompt theme
# Andrew Carter <ascarter@uw.edu>
#
# Developer prompt with Git information
#

prompt_dev_help () {
  cat <<'EOH'
Developer prompt with minimal vcs info (git branch and dirty state)

By default, this script provides a custom command prompt that includes information
about the git repository for the current folder. However, with certain large repositories,
this can result in a slow command prompt due to the performance of needed git operations.

For performance reasons, a "dirty" indicator that tells you whether or not there are
uncommitted changes is disabled by default. You can opt to turn this on for smaller repositories
by entering the following in a terminal or adding it to your postCreateCommand:

```
git config devcontainers-theme.show-dirty 1
```

To completely disable the git portion of the prompt for the current folder's repository,
you can use this configuration setting instead:

```
git config devcontainers-theme.hide-status 1
```
EOH
}

prompt_dev_setup () {
  zparseopts -D -E -F -twoline=twoline -timestamp=timestamp -compact=compact

  # Enable vcs info
  autoload -Uz vcs_info

  if [[ "$TERM" = "xterm-256color" ]]; then
    SEPARATOR=' ➜ '
    GIT_CLEAN='⎇ '
    GIT_DIRTY='⎇ '
    STATUS_OK='⏺ '
    STATUS_ERR='⊗ '
    TIME_ICON='⏱ '
  else
    SEPARATOR=' | '
    GIT_CLEAN=''
    GIT_DIRTY='x'
    STATUS_OK=''
    STATUS_ERR=''
    TIME_ICON=''
  fi

  [[ ${TERM_PROGRAM} != 'vscode' ]] && STATUS="%(?.%F{14}${STATUS_OK}%f.%F{9}${STATUS_ERR}%f)"
  [[ -n ${twoline} ]] && NEWLINE=$'\n'
  [[ -n ${timestamp} ]] && TIMESTAMP=$" %F{6}${TIME_ICON}%*%f"
  if [[ -n ${compact} ]]; then
    CWD=$'%1~'
    SEPARATOR=':'
  else
    CWD=$'%(5~|…/%3~|%~)'
  fi

  if [[ $(whence -w 'vcs_info' | cut -d ':' -f 2 | xargs) == function ]]; then
    # Prompt: user@host ~/path vcs_info %
    PROMPT='${STATUS}%F{10}%n@%m%f${SEPARATOR}%F{12}${CWD}%f ${NEWLINE}%# '
    PROMPT4='+%N:%i:%_>'
    RPROMPT='${vcs_info_msg_0_}%${TIMESTAMP}'
    prompt_opts=( cr percent subst sp )

    # Use misc for when clean, staged to indicate dirty
    +vi-dirty() {
      if [[ ! $(git config --bool devcontainers-theme.hide-status) == "true" && $(git config --bool devcontainers-theme.show-dirty) == "true" ]]  && \
              git --no-optional-locks ls-files --error-unmatch -m --directory --no-empty-directory -o --exclude-standard ":/*" > /dev/null 2>&1; then
        hook_com[staged]="$GIT_DIRTY"
      else
        hook_com[misc]="$GIT_CLEAN"
      fi
    }

    zstyle ':vcs_info:*' enable git
    zstyle ':vcs_info:git:*' check-for-changes false
    zstyle ':vcs_info:git:*' formats "%F{10}%m%f%F{1}%c%f%F{11}%b%f"
    zstyle ':vcs_info:git:*' actionformats "%F{10}%m%f%F{1}%c%f%F{11}%b%f|%F{11}%a%f"
    zstyle ':vcs_info:git*+set-message:*' hooks dirty

    terminal_title() {
      # Update terminal title on Linux
      case $(uname) in (Linux) print -Pn "\e]0;%n@%m: %1~\a"; esac
    }

    precmd() {
      vcs_info
      terminal_title
    }
  fi
}

prompt_dev_setup "$@"
